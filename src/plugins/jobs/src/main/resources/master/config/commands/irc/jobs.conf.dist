addjob {
plugin org.drftpd.jobs.master
class JobManagerCommandHandler
method doADDJOB
perms =siteop
help Add a job to the JobManager queue.
help.specific Add a job to the JobManager queue.
help.specific ${command} <file> <priority> <timestomirror> <destslave> [destslave ...]
help.specific <file> : The file to archive.
help.specific <priority> : The priority you want this job to have. Must be an Integer.
help.specific <timestomirror> : The max number of slaves each file should be on.
help.specific <destslave> : The name of the slave to transfer the files to.
input public
output source
}

listjobs {
plugin org.drftpd.jobs.master
class JobManagerCommandHandler
method doLISTJOBS
perms =siteop
help List the current jobs queued by the JobManager by index #.
help.specific List the current jobs queued by the JobManager by index #.
help.specific ${command}
input public
output source
}

listrunningjobs {
plugin org.drftpd.jobs.master
class JobManagerCommandHandler
method doLISTRUNNINGJOBS
perms =siteop
help List the current jobs queued by the JobManager by index #.
help.specific List the current jobs queued by the JobManager by index #.
help.specific ${command}
input public
output source
}

removejob {
plugin org.drftpd.jobs.master
class JobManagerCommandHandler
method doREMOVEJOB
perms =siteop
help Removes a Job from the JobManager queue by index # or range.
help.specific Removes a Job from the JobManager queue by index # or range.
help.specific ${command} <jobindex> <lowrange>-<highrange> will remove the job with
help.specific jobindex and all jobs including and between lowrange and highrange.
help.specific You can use as many ranges as your heart desires.
input public
output source
}

removejobs {
plugin org.drftpd.jobs.master
class JobManagerCommandHandler
method doREMOVEJOBS
perms =siteop
help Removes all jobs that are not currently transferring.
help.specific Removes all jobs that are not currently transferring.
help.specific ${command}
input public
output source
}

startjobs {
plugin org.drftpd.jobs.master
class JobManagerCommandHandler
method doSTARTJOBS
perms =siteop
help Starts running the jobs in the JobManager queue.
help.specific Starts running the jobs in the JobManager queue.
help.specific ${command}
input public
output source
}

stopjobs {
plugin org.drftpd.jobs.master
class JobManagerCommandHandler
method doSTOPJOBS
perms =siteop
help Stops running the jobs in the JobManager queue.
help.specific Stops running the jobs in the JobManager queue.
help.specific ${command}
input public
output source
}